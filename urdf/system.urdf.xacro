<?xml version="1.0"?>

<robot name="eureca" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:include filename="$(find lampo_description)/urdf/sweepee/sweepee.gazebo.xacro" />
  <xacro:include filename="$(find lampo_description)/urdf/sweepee/sweepee.xacro" />
  
  <xacro:arg name="name" default="ur"/>
  <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro"/>

  <xacro:arg name="ur_type" default="ur10"/>

  <!-- parameters -->
  <xacro:arg name="prefix" default="" />
  <xacro:arg name="prefix_rc" default="" />
  <xacro:arg name="joint_limit_params" default="$(find ur_description)/config/$(arg ur_type)/joint_limits.yaml"/>
  <xacro:arg name="kinematics_params" default="$(find ur_description)/config/$(arg ur_type)/default_kinematics.yaml"/>
  <xacro:arg name="physical_params" default="$(find ur_description)/config/$(arg ur_type)/physical_parameters.yaml"/>
  <xacro:arg name="visual_params" default="$(find ur_description)/config/$(arg ur_type)/visual_parameters.yaml"/>
  <xacro:arg name="transmission_hw_interface" default=""/>
  <xacro:arg name="safety_limits" default="false"/>
  <xacro:arg name="safety_pos_margin" default="0.15"/>
  <xacro:arg name="safety_k_position" default="20"/>
  <!-- ros2_control related parameters -->
  <xacro:arg name="headless_mode" default="false" />
  <xacro:arg name="robot_ip" default="0.0.0.0" />
  <xacro:arg name="script_filename" default=""/>
  <xacro:arg name="output_recipe_filename" default=""/>
  <xacro:arg name="input_recipe_filename" default=""/>
  <!--   tool communication related parameters-->
  <xacro:arg name="use_tool_communication" default="false" />
  <xacro:arg name="tool_voltage" default="24" />
  <xacro:arg name="tool_parity" default="0" />
  <xacro:arg name="tool_baud_rate" default="115200" />
  <xacro:arg name="tool_stop_bits" default="1" />
  <xacro:arg name="tool_rx_idle_chars" default="1.5" />
  <xacro:arg name="tool_tx_idle_chars" default="3.5" />
  <xacro:arg name="tool_device_name" default="/tmp/ttyUR" />
  <xacro:arg name="tool_tcp_port" default="54321" />

    <!-- Simulation parameters -->
  <xacro:arg name="use_fake_hardware" default="true" />
  <xacro:arg name="fake_sensor_commands" default="true" />
  <xacro:arg name="sim_gazebo" default="false" />
  <xacro:arg name="sim_ignition" default="true" />
  <xacro:arg name="simulation_controllers" default="error_default" />

  <!-- initial position for simulations (Fake Hardware, Gazebo, Ignition) -->
  <xacro:arg name="initial_positions_file" default="$(find ur_description)/config/initial_positions.yaml"/>

  <!-- convert to property to use substitution in function -->
  <xacro:property name="initial_positions_file" default="$(arg initial_positions_file)"/>

  <xacro:property name="M_PI" value="3.14159"/>

  <xacro:sweepee  prefix="$(arg prefix)">
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:sweepee>

  <xacro:sweepee_gazebo />

  <xacro:if value="$(arg sim_gazebo)">
    <gazebo reference="world">
      <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
        <robot_param>robot_description</robot_param>
        <robot_namespace>$(arg prefix)</robot_namespace>
	      <parameters>$(arg simulation_controllers)</parameters>
        <robot_param_node>robot_state_publisher</robot_param_node>
      </plugin>
    </gazebo>
  </xacro:if>

  <xacro:if value="$(arg sim_ignition)">
    <plugin
      filename="gz-sim-sensors-system"
      name="gz::sim::systems::Sensors">
      <render_engine>ogre2</render_engine>
    </plugin>
  </xacro:if>

   <!-- arm -->
  <!-- <xacro:ur_robot
    name="$(arg name)"
    prefix="$(arg prefix)"
    parent="$(arg prefix)base_footprint"
    joint_limits_parameters_file="$(arg joint_limit_params)"
    kinematics_parameters_file="$(arg kinematics_params)"
    physical_parameters_file="$(arg physical_params)"
    visual_parameters_file="$(arg visual_params)"
    transmission_hw_interface="$(arg transmission_hw_interface)"
    safety_limits="$(arg safety_limits)"
    safety_pos_margin="$(arg safety_pos_margin)"
    safety_k_position="$(arg safety_k_position)"
    use_fake_hardware="$(arg use_fake_hardware)"
    fake_sensor_commands="$(arg fake_sensor_commands)"
    sim_gazebo="$(arg sim_gazebo)"
    sim_ignition="$(arg sim_ignition)"
    headless_mode="$(arg headless_mode)"
    initial_positions="${xacro.load_yaml(initial_positions_file)}"
    use_tool_communication="$(arg use_tool_communication)"
    tool_voltage="$(arg tool_voltage)"
    tool_parity="$(arg tool_parity)"
    tool_baud_rate="$(arg tool_baud_rate)"
    tool_stop_bits="$(arg tool_stop_bits)"
    tool_rx_idle_chars="$(arg tool_rx_idle_chars)"
    tool_tx_idle_chars="$(arg tool_tx_idle_chars)"
    tool_device_name="$(arg tool_device_name)"
    tool_tcp_port="$(arg tool_tcp_port)"
    robot_ip="$(arg robot_ip)"
    script_filename="$(arg script_filename)"
    output_recipe_filename="$(arg output_recipe_filename)"
    input_recipe_filename="$(arg input_recipe_filename)"
    >
    <origin xyz="0 0 0.4" rpy="0 0 0" />          
  </xacro:ur_robot> -->



  <xacro:if value="$(arg sim_ignition)">
    <!-- <gazebo reference="world">
    </gazebo>
    <gazebo> -->
      <plugin filename="gz_ros2_control-system" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
        <parameters>$(arg simulation_controllers)</parameters>
        <controller_manager_node_name>$(arg prefix)controller_manager</controller_manager_node_name>
        <robot_param>robot_description</robot_param>
        <robot_namespace>$(arg prefix)</robot_namespace>
        <robot_param_node>robot_state_publisher</robot_param_node>
      </plugin>
    </gazebo>
  </xacro:if>





  <!-- <joint name="$(arg prefix)lifter" type="fixed">
    <parent link="$(arg prefix)base_footprint"/>
    <child link="$(arg prefix)base_link"/>
    <origin xyz="0 0 0.28" rpy=" 0 0 0"/>
    <axis xyz="0 0 1"/>
  </joint> -->


  <!-- <gazebo>
    <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
        <ros>
          <argument>~cmd_vel:=custom_cmd_vel</argument>
          <argument>~odom:=custom_odom</argument>
        </ros>
        <update_rate>100</update_rate>
        <publish_rate>10</publish_rate>
        <publish_odom>true</publish_odom>
        <publish_odom_tf>true</publish_odom_tf>
        <odometry_frame>$(arg prefix)odom</odometry_frame>
        <robot_base_frame>$(arg prefix)base_footprint</robot_base_frame>
        <covariance_x>0.0001</covariance_x>
        <covariance_y>0.0001</covariance_y>
        <covariance_yaw>0.01</covariance_yaw>
      </plugin>
  </gazebo> -->


</robot>
